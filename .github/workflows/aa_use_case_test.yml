# This is a basic workflow to help you get started with Actions

name: Use case tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Default settings
defaults:
    run:
      shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  aatest_ds000114_dartel:
    name: Testing SPM DARTEL

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 /test/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_dartel','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds000114_dartel
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_ds000114_diffusion:
    name: Testing Diffusion (with FSL)

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01/ses-test /test/data/aa_demo/ds000114/sub-01/ses-test --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_diffusion','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds000114_diffusion
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log
  
  aatest_ds000114_fmrisymlinks:
    name: Testing fMRI with symlinks

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 /test/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 /test/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 /test/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_fmrisymlinks','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds000114_fmrisymlinks
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_ds000114_fmrilocalpipeline:
    name: Testing fMRI using local pipeline connection

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 /test/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 /test/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 /test/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_fmrilocalpipeline','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds000114_fmrilocalpipeline
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_ds000114_scrubbing:
    name: Testing fMRI frame censoring

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 /test/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 /test/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 /test/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 /test/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-04 /test/data/aa_demo/ds000114/sub-04 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_scrubbing','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds000114_scrubbing
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_ds002737_deface:
    name: Testing (Freesurfer) Deface and FaceMasking

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 1
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://openneuro.org/ds002737/sub-01/ses-03 /test/data/aa_demo/ds002737/sub-01/ses-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_ds002737_deface','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_ds002737_deface
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_lemon_meegsensor:
    name: Testing the M/EEG (with statistics)

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/EEG_MPILMBB_LEMON/EEG_Raw_BIDS_ID/sub-032301 /test/data/aa_demo/LEMON_EEG/sub-032301 --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/MRI_MPILMBB_LEMON/MRI_Raw/sub-032301/ses-01/anat /test/data/aa_demo/LEMON_MRI/sub-032301/ses-01/anat --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/EEG_MPILMBB_LEMON/EEG_Raw_BIDS_ID/sub-032302 /test/data/aa_demo/LEMON_EEG/sub-032302 --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/MRI_MPILMBB_LEMON/MRI_Raw/sub-032302/ses-01/anat /test/data/aa_demo/LEMON_MRI/sub-032302/ses-01/anat --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/EEG_MPILMBB_LEMON/EEG_Raw_BIDS_ID/sub-032303 /test/data/aa_demo/LEMON_EEG/sub-032303 --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/MRI_MPILMBB_LEMON/MRI_Raw/sub-032303/ses-01/anat /test/data/aa_demo/LEMON_MRI/sub-032303/ses-01/anat --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_lemon_meegsensor','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_${{github.job}}
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log

  aatest_lemon_meegsource:
    name: Testing the M/EEG (with source reconstruction)

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Create test space
        run: |
          sudo mkdir /test
          sudo chown runner: /test
          sudo chmod u+w /test
          echo "Free space:"
          df -h

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v3

      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.6'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools and configure aa
        run: |
          python trigger_install.py
        working-directory: ${{github.workspace}}/.github/workflows
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 0
          PARAMETER_XML: aap_parameters_defaults_GitHub.xml

      - name: Retrive test data under /test/data/aa_demo
        run: |
          mkdir -p /test/data/aa_demo
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/EEG_MPILMBB_LEMON/EEG_Raw_BIDS_ID/sub-032301 /test/data/aa_demo/LEMON_EEG/sub-032301 --quiet --recursive --no-sign-request
          aws s3 cp s3://fcp-indi/data/Projects/INDI/MPI-LEMON/MRI_MPILMBB_LEMON/MRI_Raw/sub-032301/ses-01/anat /test/data/aa_demo/LEMON_MRI/sub-032301/ses-01/anat --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile('/test','tools','spm12')); SPM.load; aa_test('glob','aatest_lemon_meegsource','haltonerror',true); aa_test_getreport('/test/projects','/test/projects/report')

      - name: Archive data
        uses: actions/upload-artifact@v3
        with:
          name: aatest_${{github.job}}
          path: |
            /test/projects/report/

      - name: Archive log
        uses: actions/upload-artifact@v3
        with:
          name: testlog_${{github.job}}
          path: |
            ${{github.workspace}}/developer/aa_test.log
